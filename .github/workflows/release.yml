name: 

on:
  release:
    types:
      - published

env:
  # git
  REGISTRY: ghcr.io
  GIT_ORGA: shoppingflux
  # image
  # DOCKERFILE: dockerfiles/crowdin.Dockerfile
  IMAGE_NAME: prod-crowdin
  IMAGE_TAG: latest
  # BASE_IMAGE_NAME: prod-build
  # AWS
  AWS_REGION: eu-west-3
  # AWS_APP_DIR: /app/src/messages.xlf
  AWS_S3_BUCKETNAME: test-crowdin-maksym
  AWS_S3_BUCKETNAME_DEPLOY: test-deploy-maksym
  AWS_ARTIFACT_PATH: test/release

jobs:

  build:

    name: "build webapp"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Login to Github container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Extract files from docker container to local
        uses: shrink/actions-docker-extract@v1
        id: extract
        with:
          image: ${{ env.REGISTRY }}/${{ env.GIT_ORGA }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          path: ${{ env.AWS_APP_DIR }}

      - name: Get latest release
        run: echo "LATEST_RELEASE=$(echo ${{ github.event.release.tag_name }})" >> $GITHUB_ENV

      - name: Package artifacts
        run: |-
          mkdir -p packages/$AWS_ARTIFACT_PATH-$LATEST_RELEASE
          tar -zcf packages/$AWS_ARTIFACT_PATH-$LATEST_RELEASE/package.tar.gz ${{ steps.extract.outputs.destination }}

      - name: Deploy package to S3 bucket
        run: |-
          aws s3 sync packages s3://$AWS_S3_BUCKETNAME_DEPLOY
